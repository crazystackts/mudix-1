/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { DependentListRelationFilter } from "../../dependent/base/DependentListRelationFilter";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { HolderListRelationFilter } from "../../holder/base/HolderListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { WorkerWhereUniqueInput } from "../../worker/base/WorkerWhereUniqueInput";

@InputType()
class RequestWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  channel?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => DependentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DependentListRelationFilter)
  @IsOptional()
  @Field(() => DependentListRelationFilter, {
    nullable: true,
  })
  dependents?: DependentListRelationFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  finalize?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: () => HolderListRelationFilter,
  })
  @ValidateNested()
  @Type(() => HolderListRelationFilter)
  @IsOptional()
  @Field(() => HolderListRelationFilter, {
    nullable: true,
  })
  holder?: HolderListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  ip?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  renewal?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  step?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  typeField?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => WorkerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => WorkerWhereUniqueInput)
  @IsOptional()
  @Field(() => WorkerWhereUniqueInput, {
    nullable: true,
  })
  worker?: WorkerWhereUniqueInput;
}

export { RequestWhereInput as RequestWhereInput };
