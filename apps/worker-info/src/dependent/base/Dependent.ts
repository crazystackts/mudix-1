/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsDate,
  IsBoolean,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { DependentAddress } from "../../dependentAddress/base/DependentAddress";
import { DependentAttachment } from "../../dependentAttachment/base/DependentAttachment";
import { DependentContactAuthorization } from "../../dependentContactAuthorization/base/DependentContactAuthorization";
import { DependentContact } from "../../dependentContact/base/DependentContact";
import { DependentDocument } from "../../dependentDocument/base/DependentDocument";
import { DependentPhone } from "../../dependentPhone/base/DependentPhone";
import { Request } from "../../request/base/Request";

@ObjectType()
class Dependent {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  affectionateFirstName!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  affectionateLastName!: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  birthDate!: Date | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  complete!: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  credential!: string | null;

  @ApiProperty({
    required: false,
    type: () => [DependentAddress],
  })
  @ValidateNested()
  @Type(() => DependentAddress)
  @IsOptional()
  dependentAddresses?: Array<DependentAddress>;

  @ApiProperty({
    required: false,
    type: () => [DependentAttachment],
  })
  @ValidateNested()
  @Type(() => DependentAttachment)
  @IsOptional()
  dependentAttachments?: Array<DependentAttachment>;

  @ApiProperty({
    required: false,
    type: () => DependentContactAuthorization,
  })
  @ValidateNested()
  @Type(() => DependentContactAuthorization)
  @IsOptional()
  dependentContactAuthorization?: DependentContactAuthorization | null;

  @ApiProperty({
    required: false,
    type: () => [DependentContact],
  })
  @ValidateNested()
  @Type(() => DependentContact)
  @IsOptional()
  dependentContacts?: Array<DependentContact>;

  @ApiProperty({
    required: false,
    type: () => [DependentDocument],
  })
  @ValidateNested()
  @Type(() => DependentDocument)
  @IsOptional()
  dependentDocuments?: Array<DependentDocument>;

  @ApiProperty({
    required: false,
    type: () => [DependentPhone],
  })
  @ValidateNested()
  @Type(() => DependentPhone)
  @IsOptional()
  dependentPhones?: Array<DependentPhone>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  education!: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  exclude!: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  gender!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  maritalStatus!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  relationship!: string | null;

  @ApiProperty({
    required: true,
    type: () => Request,
  })
  @ValidateNested()
  @Type(() => Request)
  request?: Request;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  socialFirstName!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  socialLastName!: string | null;
}

export { Dependent as Dependent };
