/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, ValidateNested, IsOptional } from "class-validator";
import { NotificationCreateNestedManyWithoutQueuesInput } from "./NotificationCreateNestedManyWithoutQueuesInput";
import { Type } from "class-transformer";
import { QueueActionCreateNestedManyWithoutQueuesInput } from "./QueueActionCreateNestedManyWithoutQueuesInput";
import { QueueHistoryCreateNestedManyWithoutQueuesInput } from "./QueueHistoryCreateNestedManyWithoutQueuesInput";
import { QueuePositionCreateNestedManyWithoutQueuesInput } from "./QueuePositionCreateNestedManyWithoutQueuesInput";

@InputType()
class QueueCreateInput {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: () => NotificationCreateNestedManyWithoutQueuesInput,
  })
  @ValidateNested()
  @Type(() => NotificationCreateNestedManyWithoutQueuesInput)
  @IsOptional()
  @Field(() => NotificationCreateNestedManyWithoutQueuesInput, {
    nullable: true,
  })
  notifications?: NotificationCreateNestedManyWithoutQueuesInput;

  @ApiProperty({
    required: false,
    type: () => QueueActionCreateNestedManyWithoutQueuesInput,
  })
  @ValidateNested()
  @Type(() => QueueActionCreateNestedManyWithoutQueuesInput)
  @IsOptional()
  @Field(() => QueueActionCreateNestedManyWithoutQueuesInput, {
    nullable: true,
  })
  queueActions?: QueueActionCreateNestedManyWithoutQueuesInput;

  @ApiProperty({
    required: false,
    type: () => QueueHistoryCreateNestedManyWithoutQueuesInput,
  })
  @ValidateNested()
  @Type(() => QueueHistoryCreateNestedManyWithoutQueuesInput)
  @IsOptional()
  @Field(() => QueueHistoryCreateNestedManyWithoutQueuesInput, {
    nullable: true,
  })
  queueHistories?: QueueHistoryCreateNestedManyWithoutQueuesInput;

  @ApiProperty({
    required: false,
    type: () => QueuePositionCreateNestedManyWithoutQueuesInput,
  })
  @ValidateNested()
  @Type(() => QueuePositionCreateNestedManyWithoutQueuesInput)
  @IsOptional()
  @Field(() => QueuePositionCreateNestedManyWithoutQueuesInput, {
    nullable: true,
  })
  queuePositions?: QueuePositionCreateNestedManyWithoutQueuesInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  status!: string;
}

export { QueueCreateInput as QueueCreateInput };
