/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CustomerWhereUniqueInput } from "../../customer/base/CustomerWhereUniqueInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { NotificationUpdateManyWithoutUsersInput } from "./NotificationUpdateManyWithoutUsersInput";
import { QueueActionUpdateManyWithoutUsersInput } from "./QueueActionUpdateManyWithoutUsersInput";
import { QueuePositionUpdateManyWithoutUsersInput } from "./QueuePositionUpdateManyWithoutUsersInput";

@InputType()
class UserUpdateInput {
  @ApiProperty({
    required: false,
    type: () => CustomerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CustomerWhereUniqueInput)
  @IsOptional()
  @Field(() => CustomerWhereUniqueInput, {
    nullable: true,
  })
  customers?: CustomerWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string;

  @ApiProperty({
    required: false,
    type: () => NotificationUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => NotificationUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => NotificationUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  notifications?: NotificationUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => QueueActionUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => QueueActionUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => QueueActionUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  queueActions?: QueueActionUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => QueuePositionUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => QueuePositionUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => QueuePositionUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  queuePositions?: QueuePositionUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  role?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  userName?: string;
}

export { UserUpdateInput as UserUpdateInput };
